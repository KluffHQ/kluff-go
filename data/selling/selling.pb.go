// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.24.3
// source: selling.proto

package selling

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SendEmailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Customer                 string   `protobuf:"bytes,1,opt,name=Customer,proto3" json:"Customer,omitempty"`
	CreditLimit              int32    `protobuf:"varint,3,opt,name=CreditLimit,proto3" json:"CreditLimit,omitempty"`
	CustomerOutstanding      int32    `protobuf:"varint,2,opt,name=CustomerOutstanding,proto3" json:"CustomerOutstanding,omitempty"`
	CreditContollerUsersList []string `protobuf:"bytes,4,rep,name=CreditContollerUsersList,proto3" json:"CreditContollerUsersList,omitempty"`
}

func (x *SendEmailRequest) Reset() {
	*x = SendEmailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_selling_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendEmailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendEmailRequest) ProtoMessage() {}

func (x *SendEmailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_selling_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendEmailRequest.ProtoReflect.Descriptor instead.
func (*SendEmailRequest) Descriptor() ([]byte, []int) {
	return file_selling_proto_rawDescGZIP(), []int{0}
}

func (x *SendEmailRequest) GetCustomer() string {
	if x != nil {
		return x.Customer
	}
	return ""
}

func (x *SendEmailRequest) GetCreditLimit() int32 {
	if x != nil {
		return x.CreditLimit
	}
	return 0
}

func (x *SendEmailRequest) GetCustomerOutstanding() int32 {
	if x != nil {
		return x.CustomerOutstanding
	}
	return 0
}

func (x *SendEmailRequest) GetCreditContollerUsersList() []string {
	if x != nil {
		return x.CreditContollerUsersList
	}
	return nil
}

type SendEmailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *SendEmailResponse) Reset() {
	*x = SendEmailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_selling_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendEmailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendEmailResponse) ProtoMessage() {}

func (x *SendEmailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_selling_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendEmailResponse.ProtoReflect.Descriptor instead.
func (*SendEmailResponse) Descriptor() ([]byte, []int) {
	return file_selling_proto_rawDescGZIP(), []int{1}
}

func (x *SendEmailResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetCustomerPrimaryContactRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Txt     string   `protobuf:"bytes,1,opt,name=txt,proto3" json:"txt,omitempty"`
	Filters []string `protobuf:"bytes,2,rep,name=filters,proto3" json:"filters,omitempty"`
}

func (x *GetCustomerPrimaryContactRequest) Reset() {
	*x = GetCustomerPrimaryContactRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_selling_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCustomerPrimaryContactRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCustomerPrimaryContactRequest) ProtoMessage() {}

func (x *GetCustomerPrimaryContactRequest) ProtoReflect() protoreflect.Message {
	mi := &file_selling_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCustomerPrimaryContactRequest.ProtoReflect.Descriptor instead.
func (*GetCustomerPrimaryContactRequest) Descriptor() ([]byte, []int) {
	return file_selling_proto_rawDescGZIP(), []int{2}
}

func (x *GetCustomerPrimaryContactRequest) GetTxt() string {
	if x != nil {
		return x.Txt
	}
	return ""
}

func (x *GetCustomerPrimaryContactRequest) GetFilters() []string {
	if x != nil {
		return x.Filters
	}
	return nil
}

type GetCustomerPrimaryContactResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Contacts []*Contact `protobuf:"bytes,1,rep,name=Contacts,proto3" json:"Contacts,omitempty"`
}

func (x *GetCustomerPrimaryContactResponse) Reset() {
	*x = GetCustomerPrimaryContactResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_selling_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCustomerPrimaryContactResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCustomerPrimaryContactResponse) ProtoMessage() {}

func (x *GetCustomerPrimaryContactResponse) ProtoReflect() protoreflect.Message {
	mi := &file_selling_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCustomerPrimaryContactResponse.ProtoReflect.Descriptor instead.
func (*GetCustomerPrimaryContactResponse) Descriptor() ([]byte, []int) {
	return file_selling_proto_rawDescGZIP(), []int{3}
}

func (x *GetCustomerPrimaryContactResponse) GetContacts() []*Contact {
	if x != nil {
		return x.Contacts
	}
	return nil
}

type Contact struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	EmailId string `protobuf:"bytes,2,opt,name=EmailId,proto3" json:"EmailId,omitempty"`
}

func (x *Contact) Reset() {
	*x = Contact{}
	if protoimpl.UnsafeEnabled {
		mi := &file_selling_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Contact) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Contact) ProtoMessage() {}

func (x *Contact) ProtoReflect() protoreflect.Message {
	mi := &file_selling_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Contact.ProtoReflect.Descriptor instead.
func (*Contact) Descriptor() ([]byte, []int) {
	return file_selling_proto_rawDescGZIP(), []int{4}
}

func (x *Contact) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Contact) GetEmailId() string {
	if x != nil {
		return x.EmailId
	}
	return ""
}

type Point struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Latitude  int32 `protobuf:"varint,1,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude int32 `protobuf:"varint,2,opt,name=longitude,proto3" json:"longitude,omitempty"`
}

func (x *Point) Reset() {
	*x = Point{}
	if protoimpl.UnsafeEnabled {
		mi := &file_selling_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Point) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Point) ProtoMessage() {}

func (x *Point) ProtoReflect() protoreflect.Message {
	mi := &file_selling_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Point.ProtoReflect.Descriptor instead.
func (*Point) Descriptor() ([]byte, []int) {
	return file_selling_proto_rawDescGZIP(), []int{5}
}

func (x *Point) GetLatitude() int32 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *Point) GetLongitude() int32 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

type Feature struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Location *Point `protobuf:"bytes,2,opt,name=location,proto3" json:"location,omitempty"`
}

func (x *Feature) Reset() {
	*x = Feature{}
	if protoimpl.UnsafeEnabled {
		mi := &file_selling_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Feature) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Feature) ProtoMessage() {}

func (x *Feature) ProtoReflect() protoreflect.Message {
	mi := &file_selling_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Feature.ProtoReflect.Descriptor instead.
func (*Feature) Descriptor() ([]byte, []int) {
	return file_selling_proto_rawDescGZIP(), []int{6}
}

func (x *Feature) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Feature) GetLocation() *Point {
	if x != nil {
		return x.Location
	}
	return nil
}

type GetLoyaltyProgramsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CustomerGroup    *CustomerGroup    `protobuf:"bytes,1,opt,name=CustomerGroup,proto3" json:"CustomerGroup,omitempty"`
	TerritoryManager *TerritoryManager `protobuf:"bytes,2,opt,name=TerritoryManager,proto3" json:"TerritoryManager,omitempty"`
	AutoOptIn        bool              `protobuf:"varint,3,opt,name=AutoOptIn,proto3" json:"AutoOptIn,omitempty"`
	FromDate         string            `protobuf:"bytes,4,opt,name=FromDate,proto3" json:"FromDate,omitempty"`
	ToDate           string            `protobuf:"bytes,5,opt,name=ToDate,proto3" json:"ToDate,omitempty"`
}

func (x *GetLoyaltyProgramsRequest) Reset() {
	*x = GetLoyaltyProgramsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_selling_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLoyaltyProgramsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLoyaltyProgramsRequest) ProtoMessage() {}

func (x *GetLoyaltyProgramsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_selling_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLoyaltyProgramsRequest.ProtoReflect.Descriptor instead.
func (*GetLoyaltyProgramsRequest) Descriptor() ([]byte, []int) {
	return file_selling_proto_rawDescGZIP(), []int{7}
}

func (x *GetLoyaltyProgramsRequest) GetCustomerGroup() *CustomerGroup {
	if x != nil {
		return x.CustomerGroup
	}
	return nil
}

func (x *GetLoyaltyProgramsRequest) GetTerritoryManager() *TerritoryManager {
	if x != nil {
		return x.TerritoryManager
	}
	return nil
}

func (x *GetLoyaltyProgramsRequest) GetAutoOptIn() bool {
	if x != nil {
		return x.AutoOptIn
	}
	return false
}

func (x *GetLoyaltyProgramsRequest) GetFromDate() string {
	if x != nil {
		return x.FromDate
	}
	return ""
}

func (x *GetLoyaltyProgramsRequest) GetToDate() string {
	if x != nil {
		return x.ToDate
	}
	return ""
}

type TerritoryManager struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SalesPersonName string `protobuf:"bytes,1,opt,name=SalesPersonName,proto3" json:"SalesPersonName,omitempty"`
	CommissionRate  uint32 `protobuf:"varint,2,opt,name=CommissionRate,proto3" json:"CommissionRate,omitempty"`
}

func (x *TerritoryManager) Reset() {
	*x = TerritoryManager{}
	if protoimpl.UnsafeEnabled {
		mi := &file_selling_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TerritoryManager) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TerritoryManager) ProtoMessage() {}

func (x *TerritoryManager) ProtoReflect() protoreflect.Message {
	mi := &file_selling_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TerritoryManager.ProtoReflect.Descriptor instead.
func (*TerritoryManager) Descriptor() ([]byte, []int) {
	return file_selling_proto_rawDescGZIP(), []int{8}
}

func (x *TerritoryManager) GetSalesPersonName() string {
	if x != nil {
		return x.SalesPersonName
	}
	return ""
}

func (x *TerritoryManager) GetCommissionRate() uint32 {
	if x != nil {
		return x.CommissionRate
	}
	return 0
}

type CustomerGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID                  uint32               `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	CreatedAt           string               `protobuf:"bytes,2,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	UpdatedAt           string               `protobuf:"bytes,3,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"`
	DeletedAt           string               `protobuf:"bytes,4,opt,name=DeletedAt,proto3" json:"DeletedAt,omitempty"`
	CustomerGroupName   string               `protobuf:"bytes,5,opt,name=CustomerGroupName,proto3" json:"CustomerGroupName,omitempty"`
	PriceList           *PriceList           `protobuf:"bytes,6,opt,name=PriceList,proto3" json:"PriceList,omitempty"`
	PaymentTermTemplate *PaymentTermTemplate `protobuf:"bytes,7,opt,name=PaymentTermTemplate,proto3" json:"PaymentTermTemplate,omitempty"`
	CreditLimits        *CreditLimits        `protobuf:"bytes,8,opt,name=CreditLimits,proto3" json:"CreditLimits,omitempty"`
}

func (x *CustomerGroup) Reset() {
	*x = CustomerGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_selling_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomerGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomerGroup) ProtoMessage() {}

func (x *CustomerGroup) ProtoReflect() protoreflect.Message {
	mi := &file_selling_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomerGroup.ProtoReflect.Descriptor instead.
func (*CustomerGroup) Descriptor() ([]byte, []int) {
	return file_selling_proto_rawDescGZIP(), []int{9}
}

func (x *CustomerGroup) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *CustomerGroup) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *CustomerGroup) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *CustomerGroup) GetDeletedAt() string {
	if x != nil {
		return x.DeletedAt
	}
	return ""
}

func (x *CustomerGroup) GetCustomerGroupName() string {
	if x != nil {
		return x.CustomerGroupName
	}
	return ""
}

func (x *CustomerGroup) GetPriceList() *PriceList {
	if x != nil {
		return x.PriceList
	}
	return nil
}

func (x *CustomerGroup) GetPaymentTermTemplate() *PaymentTermTemplate {
	if x != nil {
		return x.PaymentTermTemplate
	}
	return nil
}

func (x *CustomerGroup) GetCreditLimits() *CreditLimits {
	if x != nil {
		return x.CreditLimits
	}
	return nil
}

type GetLoyaltyProgramsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LpDetails []string `protobuf:"bytes,1,rep,name=LpDetails,proto3" json:"LpDetails,omitempty"`
}

func (x *GetLoyaltyProgramsResponse) Reset() {
	*x = GetLoyaltyProgramsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_selling_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLoyaltyProgramsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLoyaltyProgramsResponse) ProtoMessage() {}

func (x *GetLoyaltyProgramsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_selling_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLoyaltyProgramsResponse.ProtoReflect.Descriptor instead.
func (*GetLoyaltyProgramsResponse) Descriptor() ([]byte, []int) {
	return file_selling_proto_rawDescGZIP(), []int{10}
}

func (x *GetLoyaltyProgramsResponse) GetLpDetails() []string {
	if x != nil {
		return x.LpDetails
	}
	return nil
}

type CustomerGroupDetailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CustomerGroupDetailRequest) Reset() {
	*x = CustomerGroupDetailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_selling_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomerGroupDetailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomerGroupDetailRequest) ProtoMessage() {}

func (x *CustomerGroupDetailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_selling_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomerGroupDetailRequest.ProtoReflect.Descriptor instead.
func (*CustomerGroupDetailRequest) Descriptor() ([]byte, []int) {
	return file_selling_proto_rawDescGZIP(), []int{11}
}

type CustomerGroupDetailResponses struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CustomerGroupDetailResponse []*CustomerGroupDetailResponse `protobuf:"bytes,1,rep,name=CustomerGroupDetailResponse,proto3" json:"CustomerGroupDetailResponse,omitempty"`
}

func (x *CustomerGroupDetailResponses) Reset() {
	*x = CustomerGroupDetailResponses{}
	if protoimpl.UnsafeEnabled {
		mi := &file_selling_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomerGroupDetailResponses) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomerGroupDetailResponses) ProtoMessage() {}

func (x *CustomerGroupDetailResponses) ProtoReflect() protoreflect.Message {
	mi := &file_selling_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomerGroupDetailResponses.ProtoReflect.Descriptor instead.
func (*CustomerGroupDetailResponses) Descriptor() ([]byte, []int) {
	return file_selling_proto_rawDescGZIP(), []int{12}
}

func (x *CustomerGroupDetailResponses) GetCustomerGroupDetailResponse() []*CustomerGroupDetailResponse {
	if x != nil {
		return x.CustomerGroupDetailResponse
	}
	return nil
}

type CustomerGroupDetailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID                  uint32               `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	CreatedAt           string               `protobuf:"bytes,2,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	UpdatedAt           string               `protobuf:"bytes,3,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"`
	DeletedAt           string               `protobuf:"bytes,4,opt,name=DeletedAt,proto3" json:"DeletedAt,omitempty"`
	CustomerGroupName   string               `protobuf:"bytes,5,opt,name=CustomerGroupName,proto3" json:"CustomerGroupName,omitempty"`
	PriceList           *PriceList           `protobuf:"bytes,6,opt,name=PriceList,proto3" json:"PriceList,omitempty"`
	PaymentTermTemplate *PaymentTermTemplate `protobuf:"bytes,7,opt,name=PaymentTermTemplate,proto3" json:"PaymentTermTemplate,omitempty"`
	CreditLimits        *CreditLimits        `protobuf:"bytes,8,opt,name=CreditLimits,proto3" json:"CreditLimits,omitempty"`
}

func (x *CustomerGroupDetailResponse) Reset() {
	*x = CustomerGroupDetailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_selling_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomerGroupDetailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomerGroupDetailResponse) ProtoMessage() {}

func (x *CustomerGroupDetailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_selling_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomerGroupDetailResponse.ProtoReflect.Descriptor instead.
func (*CustomerGroupDetailResponse) Descriptor() ([]byte, []int) {
	return file_selling_proto_rawDescGZIP(), []int{13}
}

func (x *CustomerGroupDetailResponse) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *CustomerGroupDetailResponse) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *CustomerGroupDetailResponse) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *CustomerGroupDetailResponse) GetDeletedAt() string {
	if x != nil {
		return x.DeletedAt
	}
	return ""
}

func (x *CustomerGroupDetailResponse) GetCustomerGroupName() string {
	if x != nil {
		return x.CustomerGroupName
	}
	return ""
}

func (x *CustomerGroupDetailResponse) GetPriceList() *PriceList {
	if x != nil {
		return x.PriceList
	}
	return nil
}

func (x *CustomerGroupDetailResponse) GetPaymentTermTemplate() *PaymentTermTemplate {
	if x != nil {
		return x.PaymentTermTemplate
	}
	return nil
}

func (x *CustomerGroupDetailResponse) GetCreditLimits() *CreditLimits {
	if x != nil {
		return x.CreditLimits
	}
	return nil
}

type PriceList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PriceListName       string   `protobuf:"bytes,1,opt,name=PriceListName,proto3" json:"PriceListName,omitempty"`
	Currency            string   `protobuf:"bytes,2,opt,name=Currency,proto3" json:"Currency,omitempty"`
	BuyingOption        bool     `protobuf:"varint,3,opt,name=BuyingOption,proto3" json:"BuyingOption,omitempty"`
	SellingOption       bool     `protobuf:"varint,4,opt,name=SellingOption,proto3" json:"SellingOption,omitempty"`
	ApplicableCountries []string `protobuf:"bytes,5,rep,name=ApplicableCountries,proto3" json:"ApplicableCountries,omitempty"`
}

func (x *PriceList) Reset() {
	*x = PriceList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_selling_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PriceList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PriceList) ProtoMessage() {}

func (x *PriceList) ProtoReflect() protoreflect.Message {
	mi := &file_selling_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PriceList.ProtoReflect.Descriptor instead.
func (*PriceList) Descriptor() ([]byte, []int) {
	return file_selling_proto_rawDescGZIP(), []int{14}
}

func (x *PriceList) GetPriceListName() string {
	if x != nil {
		return x.PriceListName
	}
	return ""
}

func (x *PriceList) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *PriceList) GetBuyingOption() bool {
	if x != nil {
		return x.BuyingOption
	}
	return false
}

func (x *PriceList) GetSellingOption() bool {
	if x != nil {
		return x.SellingOption
	}
	return false
}

func (x *PriceList) GetApplicableCountries() []string {
	if x != nil {
		return x.ApplicableCountries
	}
	return nil
}

type PaymentTermTemplate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaymentTemplateName string          `protobuf:"bytes,1,opt,name=PaymentTemplateName,proto3" json:"PaymentTemplateName,omitempty"`
	PaymentTerms        []*PaymentTerms `protobuf:"bytes,2,rep,name=PaymentTerms,proto3" json:"PaymentTerms,omitempty"`
}

func (x *PaymentTermTemplate) Reset() {
	*x = PaymentTermTemplate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_selling_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentTermTemplate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentTermTemplate) ProtoMessage() {}

func (x *PaymentTermTemplate) ProtoReflect() protoreflect.Message {
	mi := &file_selling_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentTermTemplate.ProtoReflect.Descriptor instead.
func (*PaymentTermTemplate) Descriptor() ([]byte, []int) {
	return file_selling_proto_rawDescGZIP(), []int{15}
}

func (x *PaymentTermTemplate) GetPaymentTemplateName() string {
	if x != nil {
		return x.PaymentTemplateName
	}
	return ""
}

func (x *PaymentTermTemplate) GetPaymentTerms() []*PaymentTerms {
	if x != nil {
		return x.PaymentTerms
	}
	return nil
}

type PaymentTerms struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name           string  `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Description    string  `protobuf:"bytes,2,opt,name=Description,proto3" json:"Description,omitempty"`
	InvoicePortion float32 `protobuf:"fixed32,3,opt,name=InvoicePortion,proto3" json:"InvoicePortion,omitempty"`
	DueDateBasedOn string  `protobuf:"bytes,4,opt,name=DueDateBasedOn,proto3" json:"DueDateBasedOn,omitempty"`
	CreditDays     int32   `protobuf:"varint,5,opt,name=CreditDays,proto3" json:"CreditDays,omitempty"`
}

func (x *PaymentTerms) Reset() {
	*x = PaymentTerms{}
	if protoimpl.UnsafeEnabled {
		mi := &file_selling_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentTerms) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentTerms) ProtoMessage() {}

func (x *PaymentTerms) ProtoReflect() protoreflect.Message {
	mi := &file_selling_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentTerms.ProtoReflect.Descriptor instead.
func (*PaymentTerms) Descriptor() ([]byte, []int) {
	return file_selling_proto_rawDescGZIP(), []int{16}
}

func (x *PaymentTerms) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PaymentTerms) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *PaymentTerms) GetInvoicePortion() float32 {
	if x != nil {
		return x.InvoicePortion
	}
	return 0
}

func (x *PaymentTerms) GetDueDateBasedOn() string {
	if x != nil {
		return x.DueDateBasedOn
	}
	return ""
}

func (x *PaymentTerms) GetCreditDays() int32 {
	if x != nil {
		return x.CreditDays
	}
	return 0
}

type CreditLimits struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Company                *Company `protobuf:"bytes,1,opt,name=Company,proto3" json:"Company,omitempty"`
	CreditLimit            string   `protobuf:"bytes,2,opt,name=CreditLimit,proto3" json:"CreditLimit,omitempty"`
	ByPassCreditLimitAtale bool     `protobuf:"varint,3,opt,name=ByPassCreditLimitAtale,proto3" json:"ByPassCreditLimitAtale,omitempty"`
}

func (x *CreditLimits) Reset() {
	*x = CreditLimits{}
	if protoimpl.UnsafeEnabled {
		mi := &file_selling_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreditLimits) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreditLimits) ProtoMessage() {}

func (x *CreditLimits) ProtoReflect() protoreflect.Message {
	mi := &file_selling_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreditLimits.ProtoReflect.Descriptor instead.
func (*CreditLimits) Descriptor() ([]byte, []int) {
	return file_selling_proto_rawDescGZIP(), []int{17}
}

func (x *CreditLimits) GetCompany() *Company {
	if x != nil {
		return x.Company
	}
	return nil
}

func (x *CreditLimits) GetCreditLimit() string {
	if x != nil {
		return x.CreditLimit
	}
	return ""
}

func (x *CreditLimits) GetByPassCreditLimitAtale() bool {
	if x != nil {
		return x.ByPassCreditLimitAtale
	}
	return false
}

type Company struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyName         string `protobuf:"bytes,1,opt,name=CompanyName,proto3" json:"CompanyName,omitempty"`
	DefaultCurrency     string `protobuf:"bytes,2,opt,name=DefaultCurrency,proto3" json:"DefaultCurrency,omitempty"`
	Country             string `protobuf:"bytes,3,opt,name=Country,proto3" json:"Country,omitempty"`
	TaxId               string `protobuf:"bytes,4,opt,name=TaxId,proto3" json:"TaxId,omitempty"`
	Domain              string `protobuf:"bytes,5,opt,name=Domain,proto3" json:"Domain,omitempty"`
	DateOfEstablishment string `protobuf:"bytes,6,opt,name=DateOfEstablishment,proto3" json:"DateOfEstablishment,omitempty"`
}

func (x *Company) Reset() {
	*x = Company{}
	if protoimpl.UnsafeEnabled {
		mi := &file_selling_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Company) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Company) ProtoMessage() {}

func (x *Company) ProtoReflect() protoreflect.Message {
	mi := &file_selling_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Company.ProtoReflect.Descriptor instead.
func (*Company) Descriptor() ([]byte, []int) {
	return file_selling_proto_rawDescGZIP(), []int{18}
}

func (x *Company) GetCompanyName() string {
	if x != nil {
		return x.CompanyName
	}
	return ""
}

func (x *Company) GetDefaultCurrency() string {
	if x != nil {
		return x.DefaultCurrency
	}
	return ""
}

func (x *Company) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *Company) GetTaxId() string {
	if x != nil {
		return x.TaxId
	}
	return ""
}

func (x *Company) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *Company) GetDateOfEstablishment() string {
	if x != nil {
		return x.DateOfEstablishment
	}
	return ""
}

type MakeQuotationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourceName string `protobuf:"bytes,1,opt,name=source_name,json=sourceName,proto3" json:"source_name,omitempty"`
}

func (x *MakeQuotationRequest) Reset() {
	*x = MakeQuotationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_selling_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MakeQuotationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MakeQuotationRequest) ProtoMessage() {}

func (x *MakeQuotationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_selling_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MakeQuotationRequest.ProtoReflect.Descriptor instead.
func (*MakeQuotationRequest) Descriptor() ([]byte, []int) {
	return file_selling_proto_rawDescGZIP(), []int{19}
}

func (x *MakeQuotationRequest) GetSourceName() string {
	if x != nil {
		return x.SourceName
	}
	return ""
}

type MakeQuotationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetDoc *TargetDoc `protobuf:"bytes,1,opt,name=TargetDoc,proto3" json:"TargetDoc,omitempty"`
}

func (x *MakeQuotationResponse) Reset() {
	*x = MakeQuotationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_selling_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MakeQuotationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MakeQuotationResponse) ProtoMessage() {}

func (x *MakeQuotationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_selling_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MakeQuotationResponse.ProtoReflect.Descriptor instead.
func (*MakeQuotationResponse) Descriptor() ([]byte, []int) {
	return file_selling_proto_rawDescGZIP(), []int{20}
}

func (x *MakeQuotationResponse) GetTargetDoc() *TargetDoc {
	if x != nil {
		return x.TargetDoc
	}
	return nil
}

type TargetDoc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Document         *Document `protobuf:"bytes,1,opt,name=Document,proto3" json:"Document,omitempty"`
	Name             string    `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	QutationTo       string    `protobuf:"bytes,3,opt,name=QutationTo,proto3" json:"QutationTo,omitempty"`
	SellingPriceList []string  `protobuf:"bytes,4,rep,name=SellingPriceList,proto3" json:"SellingPriceList,omitempty"`
	Currency         string    `protobuf:"bytes,5,opt,name=Currency,proto3" json:"Currency,omitempty"`
}

func (x *TargetDoc) Reset() {
	*x = TargetDoc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_selling_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TargetDoc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TargetDoc) ProtoMessage() {}

func (x *TargetDoc) ProtoReflect() protoreflect.Message {
	mi := &file_selling_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TargetDoc.ProtoReflect.Descriptor instead.
func (*TargetDoc) Descriptor() ([]byte, []int) {
	return file_selling_proto_rawDescGZIP(), []int{21}
}

func (x *TargetDoc) GetDocument() *Document {
	if x != nil {
		return x.Document
	}
	return nil
}

func (x *TargetDoc) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TargetDoc) GetQutationTo() string {
	if x != nil {
		return x.QutationTo
	}
	return ""
}

func (x *TargetDoc) GetSellingPriceList() []string {
	if x != nil {
		return x.SellingPriceList
	}
	return nil
}

func (x *TargetDoc) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

type Document struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DocType              string            `protobuf:"bytes,1,opt,name=DocType,proto3" json:"DocType,omitempty"`
	Tables               []string          `protobuf:"bytes,2,rep,name=Tables,proto3" json:"Tables,omitempty"`
	LinkTables           []string          `protobuf:"bytes,3,rep,name=LinkTables,proto3" json:"LinkTables,omitempty"`
	LinkedTableAliases   map[string]string `protobuf:"bytes,4,rep,name=LinkedTableAliases,proto3" json:"LinkedTableAliases,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	LinkedTableCounter   map[string]int32  `protobuf:"bytes,5,rep,name=LinkedTableCounter,proto3" json:"LinkedTableCounter,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	Conditions           []string          `protobuf:"bytes,6,rep,name=Conditions,proto3" json:"Conditions,omitempty"`
	OrConditions         []string          `protobuf:"bytes,7,rep,name=OrConditions,proto3" json:"OrConditions,omitempty"`
	Fields               []string          `protobuf:"bytes,8,rep,name=Fields,proto3" json:"Fields,omitempty"`
	User                 string            `protobuf:"bytes,9,opt,name=User,proto3" json:"User,omitempty"`
	IgnoreIfNull         bool              `protobuf:"varint,10,opt,name=IgnoreIfNull,proto3" json:"IgnoreIfNull,omitempty"`
	Flags                map[string]string `protobuf:"bytes,11,rep,name=Flags,proto3" json:"Flags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ReferenceDoctype     string            `protobuf:"bytes,12,opt,name=ReferenceDoctype,proto3" json:"ReferenceDoctype,omitempty"`
	PermissionMap        map[string]string `protobuf:"bytes,13,rep,name=PermissionMap,proto3" json:"PermissionMap,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Shared               []string          `protobuf:"bytes,14,rep,name=Shared,proto3" json:"Shared,omitempty"`
	FetchSharedDocuments bool              `protobuf:"varint,15,opt,name=FetchSharedDocuments,proto3" json:"FetchSharedDocuments,omitempty"`
}

func (x *Document) Reset() {
	*x = Document{}
	if protoimpl.UnsafeEnabled {
		mi := &file_selling_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Document) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Document) ProtoMessage() {}

func (x *Document) ProtoReflect() protoreflect.Message {
	mi := &file_selling_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Document.ProtoReflect.Descriptor instead.
func (*Document) Descriptor() ([]byte, []int) {
	return file_selling_proto_rawDescGZIP(), []int{22}
}

func (x *Document) GetDocType() string {
	if x != nil {
		return x.DocType
	}
	return ""
}

func (x *Document) GetTables() []string {
	if x != nil {
		return x.Tables
	}
	return nil
}

func (x *Document) GetLinkTables() []string {
	if x != nil {
		return x.LinkTables
	}
	return nil
}

func (x *Document) GetLinkedTableAliases() map[string]string {
	if x != nil {
		return x.LinkedTableAliases
	}
	return nil
}

func (x *Document) GetLinkedTableCounter() map[string]int32 {
	if x != nil {
		return x.LinkedTableCounter
	}
	return nil
}

func (x *Document) GetConditions() []string {
	if x != nil {
		return x.Conditions
	}
	return nil
}

func (x *Document) GetOrConditions() []string {
	if x != nil {
		return x.OrConditions
	}
	return nil
}

func (x *Document) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *Document) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *Document) GetIgnoreIfNull() bool {
	if x != nil {
		return x.IgnoreIfNull
	}
	return false
}

func (x *Document) GetFlags() map[string]string {
	if x != nil {
		return x.Flags
	}
	return nil
}

func (x *Document) GetReferenceDoctype() string {
	if x != nil {
		return x.ReferenceDoctype
	}
	return ""
}

func (x *Document) GetPermissionMap() map[string]string {
	if x != nil {
		return x.PermissionMap
	}
	return nil
}

func (x *Document) GetShared() []string {
	if x != nil {
		return x.Shared
	}
	return nil
}

func (x *Document) GetFetchSharedDocuments() bool {
	if x != nil {
		return x.FetchSharedDocuments
	}
	return false
}

var File_selling_proto protoreflect.FileDescriptor

var file_selling_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x73, 0x65, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x73, 0x65, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x22, 0xbe, 0x01, 0x0a, 0x10, 0x53, 0x65, 0x6e,
	0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x43, 0x72, 0x65,
	0x64, 0x69, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b,
	0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x30, 0x0a, 0x13, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4f, 0x75, 0x74, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x4f, 0x75, 0x74, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x3a, 0x0a,
	0x18, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x6f, 0x6c, 0x6c, 0x65, 0x72,
	0x55, 0x73, 0x65, 0x72, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x18, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x6f, 0x6c, 0x6c, 0x65, 0x72,
	0x55, 0x73, 0x65, 0x72, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x2d, 0x0a, 0x11, 0x53, 0x65, 0x6e,
	0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x4e, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x74, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x78, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x22, 0x51, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a,
	0x08, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x73, 0x65, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63,
	0x74, 0x52, 0x08, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x22, 0x37, 0x0a, 0x07, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x49, 0x64, 0x22, 0x41, 0x0a, 0x05, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e,
	0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6c, 0x6f,
	0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x22, 0x49, 0x0a, 0x07, 0x46, 0x65, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x65, 0x6c, 0x6c, 0x69,
	0x6e, 0x67, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0xf2, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x79, 0x61, 0x6c, 0x74,
	0x79, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x3c, 0x0a, 0x0d, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x65, 0x6c, 0x6c, 0x69, 0x6e,
	0x67, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x0d, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x45,
	0x0a, 0x10, 0x54, 0x65, 0x72, 0x72, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x4d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x65, 0x6c, 0x6c, 0x69,
	0x6e, 0x67, 0x2e, 0x54, 0x65, 0x72, 0x72, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x4d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x52, 0x10, 0x54, 0x65, 0x72, 0x72, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x4d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x75, 0x74, 0x6f, 0x4f, 0x70, 0x74,
	0x49, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x41, 0x75, 0x74, 0x6f, 0x4f, 0x70,
	0x74, 0x49, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x72, 0x6f, 0x6d, 0x44, 0x61, 0x74, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x46, 0x72, 0x6f, 0x6d, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x54, 0x6f, 0x44, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x54, 0x6f, 0x44, 0x61, 0x74, 0x65, 0x22, 0x64, 0x0a, 0x10, 0x54, 0x65, 0x72, 0x72, 0x69,
	0x74, 0x6f, 0x72, 0x79, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x0f, 0x53,
	0x61, 0x6c, 0x65, 0x73, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x50, 0x65, 0x72, 0x73, 0x6f,
	0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x43,
	0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x74, 0x65, 0x22, 0xe4, 0x02,
	0x0a, 0x0d, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12,
	0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x44, 0x12,
	0x1c, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x2c, 0x0a, 0x11, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x09, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x65, 0x6c,
	0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x09,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x4e, 0x0a, 0x13, 0x50, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x72, 0x6d, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x65, 0x6c, 0x6c, 0x69, 0x6e, 0x67,
	0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x72, 0x6d, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x52, 0x13, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x72,
	0x6d, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x39, 0x0a, 0x0c, 0x43, 0x72, 0x65,
	0x64, 0x69, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x73, 0x65, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x52, 0x0c, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x73, 0x22, 0x3a, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x79, 0x61, 0x6c,
	0x74, 0x79, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x4c, 0x70, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x4c, 0x70, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x22, 0x1c, 0x0a, 0x1a, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x86,
	0x01, 0x0a, 0x1c, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x12,
	0x66, 0x0a, 0x1b, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73, 0x65, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x1b, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xf2, 0x02, 0x0a, 0x1b, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x2c, 0x0a, 0x11, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x30, 0x0a, 0x09, 0x50, 0x72, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x65, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x09, 0x50, 0x72, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x4e, 0x0a, 0x13, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x72, 0x6d,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x73, 0x65, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x54, 0x65, 0x72, 0x6d, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x13, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x72, 0x6d, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x12, 0x39, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x65, 0x6c, 0x6c, 0x69, 0x6e,
	0x67, 0x2e, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x52, 0x0c,
	0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x22, 0xc9, 0x01, 0x0a,
	0x09, 0x50, 0x72, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x50, 0x72, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x22, 0x0a, 0x0c,
	0x42, 0x75, 0x79, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0c, 0x42, 0x75, 0x79, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x24, 0x0a, 0x0d, 0x53, 0x65, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x53, 0x65, 0x6c, 0x6c, 0x69, 0x6e, 0x67,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x13, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x13, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x62, 0x6c, 0x65, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x22, 0x82, 0x01, 0x0a, 0x13, 0x50, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x72, 0x6d, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x12, 0x30, 0x0a, 0x13, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x39, 0x0a, 0x0c, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x72,
	0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x65, 0x6c, 0x6c, 0x69,
	0x6e, 0x67, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x72, 0x6d, 0x73, 0x52,
	0x0c, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x72, 0x6d, 0x73, 0x22, 0xb4, 0x01,
	0x0a, 0x0c, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x72, 0x6d, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x50,
	0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0e, 0x49, 0x6e,
	0x76, 0x6f, 0x69, 0x63, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0e,
	0x44, 0x75, 0x65, 0x44, 0x61, 0x74, 0x65, 0x42, 0x61, 0x73, 0x65, 0x64, 0x4f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x44, 0x75, 0x65, 0x44, 0x61, 0x74, 0x65, 0x42, 0x61, 0x73,
	0x65, 0x64, 0x4f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x44, 0x61,
	0x79, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74,
	0x44, 0x61, 0x79, 0x73, 0x22, 0x94, 0x01, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x73, 0x12, 0x2a, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x65, 0x6c, 0x6c, 0x69, 0x6e, 0x67,
	0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x07, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x12, 0x20, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x12, 0x36, 0x0a, 0x16, 0x42, 0x79, 0x50, 0x61, 0x73, 0x73, 0x43, 0x72, 0x65,
	0x64, 0x69, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x41, 0x74, 0x61, 0x6c, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x16, 0x42, 0x79, 0x50, 0x61, 0x73, 0x73, 0x43, 0x72, 0x65, 0x64, 0x69,
	0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x41, 0x74, 0x61, 0x6c, 0x65, 0x22, 0xcf, 0x01, 0x0a, 0x07,
	0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x43, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x43, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x44, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x63, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x54, 0x61, 0x78, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x61,
	0x78, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x30, 0x0a, 0x13, 0x44,
	0x61, 0x74, 0x65, 0x4f, 0x66, 0x45, 0x73, 0x74, 0x61, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x6d, 0x65,
	0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x44, 0x61, 0x74, 0x65, 0x4f, 0x66,
	0x45, 0x73, 0x74, 0x61, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x37, 0x0a,
	0x14, 0x4d, 0x61, 0x6b, 0x65, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x49, 0x0a, 0x15, 0x4d, 0x61, 0x6b, 0x65, 0x51, 0x75,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x30, 0x0a, 0x09, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x44, 0x6f, 0x63, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x65, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x54, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x44, 0x6f, 0x63, 0x52, 0x09, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x44, 0x6f,
	0x63, 0x22, 0xb6, 0x01, 0x0a, 0x09, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x44, 0x6f, 0x63, 0x12,
	0x2d, 0x0a, 0x08, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x73, 0x65, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x44, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x08, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x51, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x51, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x6f, 0x12, 0x2a, 0x0a, 0x10, 0x53, 0x65, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x10, 0x53, 0x65,
	0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x22, 0xa8, 0x07, 0x0a, 0x08, 0x44,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x44, 0x6f, 0x63, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x44, 0x6f, 0x63, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x06, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x4c, 0x69, 0x6e,
	0x6b, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x4c,
	0x69, 0x6e, 0x6b, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x12, 0x59, 0x0a, 0x12, 0x4c, 0x69, 0x6e,
	0x6b, 0x65, 0x64, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x65, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x73, 0x65, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e,
	0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x12, 0x4c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x6c, 0x69,
	0x61, 0x73, 0x65, 0x73, 0x12, 0x59, 0x0a, 0x12, 0x4c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x29, 0x2e, 0x73, 0x65, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x12, 0x4c, 0x69, 0x6e,
	0x6b, 0x65, 0x64, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x12,
	0x1e, 0x0a, 0x0a, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x22, 0x0a, 0x0c, 0x4f, 0x72, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x4f, 0x72, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x08, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x06, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x55,
	0x73, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12,
	0x22, 0x0a, 0x0c, 0x49, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x49, 0x66, 0x4e, 0x75, 0x6c, 0x6c, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x49, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x49, 0x66, 0x4e,
	0x75, 0x6c, 0x6c, 0x12, 0x32, 0x0a, 0x05, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x0b, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x65, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x44, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x05, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x52, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x44, 0x6f, 0x63, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x44, 0x6f, 0x63, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x4a, 0x0a, 0x0d, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x4d, 0x61, 0x70, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73, 0x65, 0x6c,
	0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x0d, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x70, 0x12,
	0x16, 0x0a, 0x06, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x06, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x12, 0x32, 0x0a, 0x14, 0x46, 0x65, 0x74, 0x63, 0x68,
	0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x46, 0x65, 0x74, 0x63, 0x68, 0x53, 0x68, 0x61, 0x72,
	0x65, 0x64, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0x45, 0x0a, 0x17, 0x4c,
	0x69, 0x6e, 0x6b, 0x65, 0x64, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x65,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x1a, 0x45, 0x0a, 0x17, 0x4c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x38, 0x0a, 0x0a, 0x46, 0x6c, 0x61,
	0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x1a, 0x40, 0x0a, 0x12, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x32, 0x96, 0x04, 0x0a, 0x07, 0x53, 0x65, 0x6c, 0x6c, 0x69, 0x6e,
	0x67, 0x12, 0x30, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12,
	0x0e, 0x2e, 0x73, 0x65, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x1a,
	0x10, 0x2e, 0x73, 0x65, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x22, 0x00, 0x12, 0x53, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x6b, 0x65, 0x51, 0x75,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x2e, 0x73, 0x65, 0x6c, 0x6c, 0x69, 0x6e,
	0x67, 0x2e, 0x4d, 0x61, 0x6b, 0x65, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x73, 0x65, 0x6c, 0x6c, 0x69, 0x6e, 0x67,
	0x2e, 0x4d, 0x61, 0x6b, 0x65, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x67, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x12, 0x23, 0x2e, 0x73, 0x65, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x73, 0x65, 0x6c, 0x6c, 0x69,
	0x6e, 0x67, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x22,
	0x00, 0x12, 0x5f, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x79, 0x61, 0x6c, 0x74, 0x79, 0x50,
	0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x22, 0x2e, 0x73, 0x65, 0x6c, 0x6c, 0x69, 0x6e,
	0x67, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x79, 0x61, 0x6c, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x67,
	0x72, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x73, 0x65,
	0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x79, 0x61, 0x6c, 0x74, 0x79,
	0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x74, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x12,
	0x29, 0x2e, 0x73, 0x65, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x73, 0x65, 0x6c,
	0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x09, 0x53, 0x65, 0x6e, 0x64,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x19, 0x2e, 0x73, 0x65, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e,
	0x53, 0x65, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1a, 0x2e, 0x73, 0x65, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0a,
	0x5a, 0x08, 0x2f, 0x73, 0x65, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_selling_proto_rawDescOnce sync.Once
	file_selling_proto_rawDescData = file_selling_proto_rawDesc
)

func file_selling_proto_rawDescGZIP() []byte {
	file_selling_proto_rawDescOnce.Do(func() {
		file_selling_proto_rawDescData = protoimpl.X.CompressGZIP(file_selling_proto_rawDescData)
	})
	return file_selling_proto_rawDescData
}

var file_selling_proto_msgTypes = make([]protoimpl.MessageInfo, 27)
var file_selling_proto_goTypes = []interface{}{
	(*SendEmailRequest)(nil),                  // 0: selling.SendEmailRequest
	(*SendEmailResponse)(nil),                 // 1: selling.SendEmailResponse
	(*GetCustomerPrimaryContactRequest)(nil),  // 2: selling.GetCustomerPrimaryContactRequest
	(*GetCustomerPrimaryContactResponse)(nil), // 3: selling.GetCustomerPrimaryContactResponse
	(*Contact)(nil),                           // 4: selling.Contact
	(*Point)(nil),                             // 5: selling.Point
	(*Feature)(nil),                           // 6: selling.Feature
	(*GetLoyaltyProgramsRequest)(nil),         // 7: selling.GetLoyaltyProgramsRequest
	(*TerritoryManager)(nil),                  // 8: selling.TerritoryManager
	(*CustomerGroup)(nil),                     // 9: selling.CustomerGroup
	(*GetLoyaltyProgramsResponse)(nil),        // 10: selling.GetLoyaltyProgramsResponse
	(*CustomerGroupDetailRequest)(nil),        // 11: selling.CustomerGroupDetailRequest
	(*CustomerGroupDetailResponses)(nil),      // 12: selling.CustomerGroupDetailResponses
	(*CustomerGroupDetailResponse)(nil),       // 13: selling.CustomerGroupDetailResponse
	(*PriceList)(nil),                         // 14: selling.PriceList
	(*PaymentTermTemplate)(nil),               // 15: selling.PaymentTermTemplate
	(*PaymentTerms)(nil),                      // 16: selling.PaymentTerms
	(*CreditLimits)(nil),                      // 17: selling.CreditLimits
	(*Company)(nil),                           // 18: selling.Company
	(*MakeQuotationRequest)(nil),              // 19: selling.MakeQuotationRequest
	(*MakeQuotationResponse)(nil),             // 20: selling.MakeQuotationResponse
	(*TargetDoc)(nil),                         // 21: selling.TargetDoc
	(*Document)(nil),                          // 22: selling.Document
	nil,                                       // 23: selling.Document.LinkedTableAliasesEntry
	nil,                                       // 24: selling.Document.LinkedTableCounterEntry
	nil,                                       // 25: selling.Document.FlagsEntry
	nil,                                       // 26: selling.Document.PermissionMapEntry
}
var file_selling_proto_depIdxs = []int32{
	4,  // 0: selling.GetCustomerPrimaryContactResponse.Contacts:type_name -> selling.Contact
	5,  // 1: selling.Feature.location:type_name -> selling.Point
	9,  // 2: selling.GetLoyaltyProgramsRequest.CustomerGroup:type_name -> selling.CustomerGroup
	8,  // 3: selling.GetLoyaltyProgramsRequest.TerritoryManager:type_name -> selling.TerritoryManager
	14, // 4: selling.CustomerGroup.PriceList:type_name -> selling.PriceList
	15, // 5: selling.CustomerGroup.PaymentTermTemplate:type_name -> selling.PaymentTermTemplate
	17, // 6: selling.CustomerGroup.CreditLimits:type_name -> selling.CreditLimits
	13, // 7: selling.CustomerGroupDetailResponses.CustomerGroupDetailResponse:type_name -> selling.CustomerGroupDetailResponse
	14, // 8: selling.CustomerGroupDetailResponse.PriceList:type_name -> selling.PriceList
	15, // 9: selling.CustomerGroupDetailResponse.PaymentTermTemplate:type_name -> selling.PaymentTermTemplate
	17, // 10: selling.CustomerGroupDetailResponse.CreditLimits:type_name -> selling.CreditLimits
	16, // 11: selling.PaymentTermTemplate.PaymentTerms:type_name -> selling.PaymentTerms
	18, // 12: selling.CreditLimits.Company:type_name -> selling.Company
	21, // 13: selling.MakeQuotationResponse.TargetDoc:type_name -> selling.TargetDoc
	22, // 14: selling.TargetDoc.Document:type_name -> selling.Document
	23, // 15: selling.Document.LinkedTableAliases:type_name -> selling.Document.LinkedTableAliasesEntry
	24, // 16: selling.Document.LinkedTableCounter:type_name -> selling.Document.LinkedTableCounterEntry
	25, // 17: selling.Document.Flags:type_name -> selling.Document.FlagsEntry
	26, // 18: selling.Document.PermissionMap:type_name -> selling.Document.PermissionMapEntry
	5,  // 19: selling.Selling.GetFeature:input_type -> selling.Point
	19, // 20: selling.Selling.GetMakeQuotation:input_type -> selling.MakeQuotationRequest
	11, // 21: selling.Selling.GetCustomerGroupDetails:input_type -> selling.CustomerGroupDetailRequest
	7,  // 22: selling.Selling.GetLoyaltyPrograms:input_type -> selling.GetLoyaltyProgramsRequest
	2,  // 23: selling.Selling.GetCustomerPrimaryContact:input_type -> selling.GetCustomerPrimaryContactRequest
	0,  // 24: selling.Selling.SendEmail:input_type -> selling.SendEmailRequest
	6,  // 25: selling.Selling.GetFeature:output_type -> selling.Feature
	20, // 26: selling.Selling.GetMakeQuotation:output_type -> selling.MakeQuotationResponse
	12, // 27: selling.Selling.GetCustomerGroupDetails:output_type -> selling.CustomerGroupDetailResponses
	10, // 28: selling.Selling.GetLoyaltyPrograms:output_type -> selling.GetLoyaltyProgramsResponse
	3,  // 29: selling.Selling.GetCustomerPrimaryContact:output_type -> selling.GetCustomerPrimaryContactResponse
	1,  // 30: selling.Selling.SendEmail:output_type -> selling.SendEmailResponse
	25, // [25:31] is the sub-list for method output_type
	19, // [19:25] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_selling_proto_init() }
func file_selling_proto_init() {
	if File_selling_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_selling_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendEmailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_selling_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendEmailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_selling_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCustomerPrimaryContactRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_selling_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCustomerPrimaryContactResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_selling_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Contact); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_selling_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Point); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_selling_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Feature); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_selling_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLoyaltyProgramsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_selling_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TerritoryManager); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_selling_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomerGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_selling_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLoyaltyProgramsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_selling_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomerGroupDetailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_selling_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomerGroupDetailResponses); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_selling_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomerGroupDetailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_selling_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PriceList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_selling_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentTermTemplate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_selling_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentTerms); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_selling_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreditLimits); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_selling_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Company); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_selling_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MakeQuotationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_selling_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MakeQuotationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_selling_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TargetDoc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_selling_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Document); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_selling_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   27,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_selling_proto_goTypes,
		DependencyIndexes: file_selling_proto_depIdxs,
		MessageInfos:      file_selling_proto_msgTypes,
	}.Build()
	File_selling_proto = out.File
	file_selling_proto_rawDesc = nil
	file_selling_proto_goTypes = nil
	file_selling_proto_depIdxs = nil
}
